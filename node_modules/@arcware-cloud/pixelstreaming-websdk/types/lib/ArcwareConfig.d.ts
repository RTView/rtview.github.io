import { Config } from "@epicgames-ps/lib-pixelstreamingfrontend-ue5.2";
import { ConfigParams } from "@epicgames-ps/lib-pixelstreamingfrontend-ue5.2/types/Config/Config";
import { Session } from "./domain/Session";
import { Settings } from "./domain/ArcwareSettingsSchema";
/** Default arcware signalling endpoint. */
export declare const DefaultUrl: "wss://signalling-client.ragnarok.arcware.cloud";
export interface ArcwareConfigParams extends ConfigParams {
    settings: Settings;
}
export declare class ArcwareConfig extends Config {
    /**
     * Can be used to fetch projectId and shareId from the current url.
     * Example:
     * /something/:projectId/:shareId/something?something => { projectId, shareId }
     * /:projectId => { projectId }
     * /:shareId => { shareId }
     * /:shareId/:projectId => { projectId, shareId }
     *
     * The projectId must be uuidv4.
     * The shareId must be "shareId-" prefixed.
     *
     * Usage:
     * // This will spread the projectId and the shareId into the settings. Define anything you want to override after the spread operation.
     * new ArcwareConfig({ settings: { ...ArcwareConfig.PickIdsOfUrl() } });
     */
    static PickIdsOfUrl(): Pick<Settings, "shareId" | "projectId">;
    readonly session: Session;
    readonly settings: Settings;
    private _initialSettings;
    readonly VERSION = "0.1.10";
    constructor(config: ArcwareConfigParams);
    /** Setup connection string. */
    get urlFlags(): string;
    get initialSettings(): Partial<import("@epicgames-ps/lib-pixelstreamingfrontend-ue5.2").AllSettings>;
    modifyInitialSettings(mouseLock: boolean): void;
}
